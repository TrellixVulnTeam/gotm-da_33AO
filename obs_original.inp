!$Id: obs.inp,v 1.2 2004/02/11 17:05:45 spi Exp spi $
!-------------------------------------------------------------------------------
! General info on reading variables from file:
! Relaxation times:
! All relaxation times have to be positive (non-zero)
! Relaxation time > 1.e10 ==> no relaxation
!-------------------------------------------------------------------------------
 
!-------------------------------------------------------------------------------
! Salinity profiles
!
! s_prof_method=0:S not calculated, 1:analytical, 2:from file
! z_s1=         Upper layer thickness, if s_prof_method=1
! s_1=          Upper layer salinity, if s_prof_method=1
! z_s2=         Depth below surface of start of lower layer, if s_prof_method=1
! s_2=          Lower layer salinity, if s_prof_method=1
! s_prof_file=  file with salinity profiles
! init_s_prof=  file with initial salt profile
! SRelaxTauM= relaxation time for bulk of the flow [s]
! SRelaxTauB= relaxation time for bottom layer of thickness SRelaxBott  [s]
! SRelaxTauS= relaxation time for surface layer of thickness SRelaxSurf [s]
! SRelaxBott= height of bottom relaxation layer, set to 0. if not used
! SRelaxSurf= height of surface relaxation layer, set to 0. if not used
!-------------------------------------------------------------------------------
 &sprofile
  s_prof_method=2,
  z_s1=         30.,
  s_1=          20.,
  z_s2=         40.,
  s_2=          15.,
  s_prof_file=  'ECMWF/july_foam_salt.dat',
  init_s_prof=  'OBS/COARE/mean_sprof_week.dat',
  SRelaxTauM=   1.e15,
  SRelaxTauB=   1.e15,
  SRelaxTauS=   1.e15,
  SRelaxBott=   0.,
  SRelaxSurf=   0.,
 /

!-------------------------------------------------------------------------------
! Potential temperature profiles
!
! t_prof_method=0: T not calculated, 1=analytical, 2=from file
! For the following 4 lines, see analytical_profile.F90
! z_t1=         Upper layer thickness, if t_prof_method=1
! t_1=          Upper layer temperature, if t_prof_method=1
! z_t2=         Depth below surface of start of lower layer, if t_prof_method=1
! t_2=          Lower layer temperature, if t_prof_method=1
! t_prof_file=  file with temperature profiles
! init_t_prof=  file with initial temperature profile
! TRelaxTauM= relaxation time for bulk of the flow [s]
! TRelaxTauB= relaxation time for bottom layer of thickness TRelaxBott  [s]
! TRelaxTauS= relaxation time for surface layer of thickness TRelaxSurf [s]
! TRelaxBott= height of bottom relaxation layer, set to 0. if not used
! TRelaxSurf= height of surface relaxation layer, set to 0. if not used
!HK
! TRelax_night= .true. ie relax to observations only at night
! TRelaxTauNight = relaxation time for temperature at night (middle,surface,bottom)
!-------------------------------------------------------------------------------
 &tprofile
  t_prof_method=2,
!  smoo_t_prof_method=0,
  z_t1=         30.,
  t_1=          20.,
  z_t2=         40.,
  t_2=          15.,
  t_prof_file=  'ECMWF/july_foam.dat',
  init_t_prof=  'OBS/ARABIAN/mean_tprof_week.dat',                  
!  smoo_t_prof_file=  'arabian_s_t.dat',
!  TRelaxSmooLevel  =10.,
  TRelaxTauM=    1.e15,
  TRelaxTauB=   1.e15,
  TRelaxTauS=   1.e15,
  TRelaxBott=   0.,
  TRelaxSurf=   0.,
!  TRelax_night= .false.,
!  TRelaxTauNightM= 1.e15,
!  TRelaxTauNightS= 1.e15,
!  TRelaxTauNightB= 1.e15,
!  forecast_flux=   .false.,
 /

!-------------------------------------------------------------------------------
! External Pressure Forcing
!
! ext_press_method=0=const,1=tidal,2=from file
! PressMethod=  0,1,2 - external pressure method
!               0= sea surface elevation gradients
!               1= current meter obs.
!               2= vertical mean velocities
! ext_press_file= used if PressType=2
! The following two variables are used only for ext_press_method=0
!   PressConstU=        const. pressure gradient - x direction
!   PressConstV=        const. pressure gradient - y direction
! The following variable is used only if ext_press_method=0 or =1
!   PressHeight=        height above bottom of current obs.
! The following 10 variables are used only if ext_press_method=1
!   PeriodM=    period of 1. harmonic (eg. M2-tide)
!   AmpMu=      u amp. of 1. harmonic  - [m/s]
!   AmpMv=      v amp. of 1. harmonic  - [m/s]
!   PhaseMu=    u phase of 1. harmonic - [s]
!   PhaseMv=    v phase of 1. harmonic - [s]
!   PeriodS=    period of 2. harmonic (eg. S2-tide)
!   AmpSu=      v amp. of 2. harmonic  - [m/s]
!   AmpSv=      v amp. of 2. harmonic  - [m/s]
!   PhaseSu=    v phase of 2. harmonic - [s]
!   PhaseSv=    v phase of 2. harmonic - [s]
!-------------------------------------------------------------------------------
 &ext_pressure
  ext_press_method=0,
  PressMethod=  0,
  ext_press_file='pressure.dat',
  PressConstU=  0.0,
  PressConstV=  0.0,
  PressHeight=  0.0,
  PeriodM=      44714.0,
  AmpMu=        0.0,
  AmpMv=        0.0,
  PhaseMu=      0.0,
  PhaseMv=      0.0,
  PeriodS=      43200.0,
  AmpSu=        0.0,
  AmpSv=        0.0,
  PhaseSu=      0.0,
  PhaseSv=      0.0,
 /

!-------------------------------------------------------------------------------
! Internal Pressure Forcing
!
! int_press_method=     0=const,1=const,2=from file
! int_press_file=file with profiles of dsdx,dsdy,dtdx,dtdy
! const_dsdx=   x-gradient of S [psu/m]
! const_dsdy=   y-gradient of S [psu/m]
! const_dtdx=   x-gradient of T [K/m]
! const_dtdy=   y-gradient of T [K/m]
! const_idpdx=  x-gradient of p [m/s^2]
! const_idpdy=  y-gradient of p [m/s^2]
! s_adv=        advection of salinity (.true./.false.)
! t_adv=        advection of temperature (.true./.false.)
!-------------------------------------------------------------------------------
 &int_pressure
  int_press_method=0,
  int_press_file='intern_press.dat',
  const_dsdx=   0.0,
  const_dsdy=   0.0,
  const_dtdx=   0.0,
  const_dtdy=   0.0,
  const_idpdx=  0.0,
  const_idpdy=  0.0,
  s_adv=        .false.,
  t_adv=        .false.,
 /

!-------------------------------------------------------------------------------
! Light extinction - Jerlov type or from file
!
! extinct_method=  0: from file, 1-6=Jerlov type
!               1= Jerlov type I
!               2= Jerlov type 1 (upper 50 m)
!               3= Jerlov type IA
!               4= Jerlov type IB
!               5= Jerlov type II
!               6= Jerlov type III
!               7= Adolf Stips, Lago Maggiore 
! extinct_file= used if extinct_method=0
!      		8= 9 Stream radiation model - with cosr !Steve Hollsworth
!               9= 9 Stream radiation model - the straight forward version
!               10= 9 Stream radiation model, with diff & dir
!               12= chlorophyll based on Ohlmann & Siegel, 2000 !SP 20/02/06
! start_lat=starting latitude for chlorophyll data file
! start_lon=starting longitude for chlorophyll data file
!-------------------------------------------------------------------------------
 &extinct
  extinct_method=12
  extinct_file= 'CHLO/SeaWiFS_9km/Jan_98-05_-60N-60N_270E-359E.dat',
  start_lat=-60,
  end_lat=60,
  start_lon=270,
  end_lon=359,
 /

!-------------------------------------------------------------------------------
! Vertical advection - none, constant or from file, see get_w_adv.F90.
!
! w_adv_method= 0=const, 1=constant, 2=from file
! w_adv0=       const. vertical advection velocity
! w_adv_file=   used if w_adv_method=2
! w_adv_discr=  0: no vertical advection
!               1: not used, program will abort
!               2: first order upstream
!               3: third-order polynomial
!               4: TVD with Superbee limiter
!               5: TVD with MUSCL limiter
!               6: TVD with ULTIMATE QUICKEST
!-------------------------------------------------------------------------------
 &w_advspec
  w_adv_method= 0,
  w_adv0=       0.,
  w_adv_file=   'w_adv.dat',
  w_adv_discr=  4,
 /

!-------------------------------------------------------------------------------
! Sea surface elevations - none, from file or 2 tidal constituents.
!
! zeta_method=  0=const,1=tidal,2=from file
! zeta_file=    used if zeta_method=2
! The following variables is used only if zeta_method=0
!   zeta0=      const. sea surface elevation
! The following 6 variables are used only if zeta_method=1
!   period1=    period of 1. harmonic (eg. M2-tide) - [s]
!   amp1=       amp. of 1. harmonic  - [m]
!   phase1=     phase of 1. harmonic - [s]
!   period2=    period of 2. harmonic (eg. S2-tide) - [s]
!   amp2=       amp. of 2. harmonic  - [m]
!   phase2=     phase of 2. harmonic - [s]
!-------------------------------------------------------------------------------
 &zetaspec
  zeta_method=  0,
  zeta_file=    'zeta.dat',
  zeta_0=        0.00000,
  period_1=      44714.0,
  amp_1=         1.00000,
  phase_1=       0.00000,
  period_2=      43200.0,
  amp_2=         0.50000,
  phase_2=       0.00000,
 /

!-------------------------------------------------------------------------------
! Observed velocity profiles
!
! vel_prof_method=      0=no,1=not impl. yet,2=from file
! vel_prof_file=        file with velocity profiles
!-------------------------------------------------------------------------------
 &velprofile
  vel_prof_method=0,
  vel_prof_file='velprof.dat',
  vel_relax_tau = 1.e15,
  vel_relax_ramp = 86400,
 /
!-------------------------------------------------------------------------------
! Turbulent dissipation rate profiles
!
! e_prof_method=  0=no,1=not impl. yet,2=from file
! e_obs_const=    a constant filling value - [W/kg]
! e_prof_file=    file with dissipation profiles
!-------------------------------------------------------------------------------
 &eprofile
  e_prof_method=0,
  e_obs_const=  1.e-12,
  e_prof_file=  'eps_fly.dat',
 /

!-------------------------------------------------------------------------------
! Buoyancy - only used if buoy_method .ne. 1 (see buoyancy.f90)
!
! b_obs_surf=   prescribed initial buoyancy at the surface - [m/s^2]
! b_obs_NN=     prescribed initial const. NN (Brunt-Vaisalla squared) - [1/s^2]
! b_obs_sbf=    prescribed constant surface buoyancy flux
!-------------------------------------------------------------------------------
 &bprofile
  b_obs_surf=   0.0,
  b_obs_NN=     1.e-4,
  b_obs_sbf=    0.0,
 /
